p <- objets %>% count(names(objets)[7], patient) %>% plot_ly(x = ~names(objets)[7], y = ~n, color = ~patient)
p
names(diamonds)
count(objets, names(objets)[7], patient)
p <- objets %>% table(names(objets)[7], patient) %>% plot_ly(x = ~names(objets)[7], y = ~n, color = ~patient)
p <- table(objets$names(objets)[7], objets$patient) %>% plot_ly(x = ~names(objets)[7], y = ~n, color = ~patient)
p <- table(objets[7], objets$patient) %>% plot_ly(x = ~names(objets)[7], y = ~n, color = ~patient)
p <- table(objets[7], objets$patient)
?table
count(objets, names(objets)[7], patient)
count(objets, patient, names(objets)[7])
table(objets[c(3, 7)])
table(objets[c(2, 7)])
str(table(objets[c(2, 7)]))
tb <- table(objets[c(2, 7)])
dt <- rbind(resul, tb)
resul <- c("nagatif", "positif")
dt <- rbind(resul, tb)
dt <- data.frame(resul, tb)
is.matrix(tb)
colnames(tb) <- resul
tb2 <- table(objets[c(7, 2)])
tb2
dt <- data.frame(resul, tb2)
dt
dt <- data.frame(resul, tb2[,1], tb2[,2])
dt
count(objets, patient, names(objets)[7])
dt <- data.frame(resul, patients = tb2[,1], temoins = tb2[,2])
dt
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'TÃ©moins') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
dt
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = 'Comptage'), xaxis = list(title = names(objets)[7]), barmode = 'group')
p
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[7]), barmode = 'group')
p
resul <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[7]), barmode = 'group')
p
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[7]), barmode = 'group')
p
?par
oldPar <- par(mfrow = c(2, 3))
sapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
p
?sapply
sapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
p
})
lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
p
})
oldPar <- par(mfrow = c(2, 3))
lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
p
})
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[[1:6]])
subplot(plot_par_critere[1:6])
subplot(plot_par_critere[1:6], nrow = 2)
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE)
?subplot
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', colors = 'blue') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], colors = 'orange')
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', colors = 'blue') %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE)
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], marker = list(color = 'orange'))
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'blue')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], marker = list(color = 'rgb(55, 83, 109)'))
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], marker = list(color = I('rgb(55, 83, 109)')))
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = I('rgb(26, 118, 255)'))) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], color = I('rgb(55, 83, 109)'))
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', color = I('rgb(26, 118, 255)')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2], color = I('orange'))
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y') %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkblue')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y', color = I('orange')) %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkblue')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color=~x, showscale=FALSE)) %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkblue')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue', showscale=FALSE)) %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', color = I('darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb2[,1], Temoins = tb2[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE, titleY = TRUE)
subplot(plot_par_critere[7:12], nrows = 2, shareX = TRUE, shareY = TRUE, titleY = TRUE)
plot_par_critere[1:6]
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb[,1], Temoins = tb[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(i, 2)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb[,1], Temoins = tb[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE, titleY = TRUE)
?mtcars
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
subplot(plot_par_critere[1:6], nrows = 2, shareX = FALSE, shareY = TRUE, titleX = TRUE)
subplot(plot_par_critere[1:6], nrows = 2, shareX = TRUE, shareY = TRUE, titleX = TRUE)
subplot(plot_par_critere[1:6], nrows = 2, shareX = FALSE, shareY = TRUE, titleX = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(i, 2)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb[,1], Temoins = tb[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'darkorange')) %>%
layout(xaxis = list(title = ""), yaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = FALSE, shareY = TRUE, titleX = TRUE)
subplot(plot_par_critere[7:12], nrows = 2, shareX = TRUE, shareY = FALSE, titleY = TRUE)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(i, 2)])
resultat <- c("0", "1")
dt <- data.frame(resul, Patients = tb[,1], Temoins = tb[,2])
p <- plot_ly(dt, x = ~resul, y = ~Temoins, type = 'bar', name = 'Temoins', hoverinfo = 'y',
marker=list(color='blue'), showlegend = FALSE) %>%
add_trace(y = ~Patients, name = 'Patients', marker = list(color = 'darkorange')) %>%
layout(yaxis = list(title = ""), xaxis = list(title = names(objets)[i]), barmode = 'group')
})
subplot(plot_par_critere[1:6], nrows = 2, shareX = FALSE, shareY = TRUE, titleX = TRUE)
load("~/R/stageCHR/jeunes01.RData")
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
tb <- table(objets[c(7, 2)])
barplot(tb, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
tb <- table(objets[c(2, 7)])
barplot(tb, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
oldPar <- par(mfrow = c(2, 3))
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
barplot(tb, # main="Car Distribution by Gears and VS",
# xlab="Number of Gears",
col=c("darkblue","red"),
# legend = rownames(counts),
beside=TRUE)
})
barplot(tb, # main=,
xlab=colnames(objets)[i],
col=c("darkblue","red"),
# legend = rownames(counts),
beside=TRUE)
colnames(objets)
plot_par_critere <- lapply(7:32, function(i) {
tb <- table(objets[c(2, i)])
barplot(tb, # main=,
xlab=colnames(objets)[i],
col=c("darkblue","red"),
# legend = rownames(counts),
beside=TRUE)
})
cor(objets[, 7:32])
objets[positionsNA[1,1], positionsNA[1,2]] <- "B"
objets[positionsNA[2,1], positionsNA[2,2]] <- 1
positionsNA <- which(is.na(objets), arr.ind = TRUE, useNames = TRUE)
colnames(objets)[positionsNA[, 2]]
objets[positionsNA[1,1], positionsNA[1,2]] <- "B"
objets[positionsNA[2,1], positionsNA[2,2]] <- 1
library(dplyr)
cor(objets[, 7:32])
library(reshape2)
library(ggplot2)
library(dplyr)
?melt
p <- ggplot(data=moltenDt, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
moltenDt <-melt(cor(objets[, 7:32]))
p <- ggplot(data=moltenDt, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
p
corObjets <- cor(objets[, 7:32])
p2 <- plot_ly(z = corObjets, type = "heatmap")
library(plotly)
p2 <- plot_ly(z = corObjets, type = "heatmap")
p2
p2 <- plot_ly(x = colnames(objets)[7:32], y = colnames(objets)[7:32], z = corObjets, type = "heatmap")
p2
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[i], " : ", corObjets[i, j]))
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i, j]))
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i, j]))}
for (i in 7:32)
for(j in (i+1):32)
print(i+j)
corObjets <- cor(objets[, 7:32])
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i, j]))
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
head(corObjets)
print(i, j)
print(c(i, j))
corobjets >= 0.5
corObjets >= 0.5
which(corObjets >= 0.5)
?which
which(corObjets >= 0.5, arr.ind = TRUE)
dim(corObjets)
(c(i, j))
if (corObjets[i-6, j-6] >= 0.5) print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
}
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
}
grandCor <- which(corObjets >= 0.5, arr.ind = TRUE)
granCor <- grandCor[grandCor[1,] != grandCor[2, ], ]
grandCor <- grandCor[grandCor[1,] != grandCor[2, ], ]
grandCor
grandCor <- grandCor[grandCor[,1] != grandCor[, 2], ]
grandCor <- grandCor[grandCor[,1] != grandCor[, 2], ]
grandCor
for (i in 7:31){
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
print (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
}
}
cat (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
for (i in 7:31){
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
cat (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]))
}
}
for (i in 7:31){
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
cat (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]), "/n")
}
}
for (i in 7:31){
for (j in (i+1):32){
if (corObjets[i-6, j-6] >= 0.5)
cat (paste(colnames(objets)[i], " vs. ", colnames(objets)[j], " : ", corObjets[i-6, j-6]), "\n")
}
}
?make.names
colnames(objets)
wilcox.test(patients[7], temoins[7], alternative = "less")
str(patient[7])
str(patients[7])
wilcox.test(patients[, 7], temoins[, 7], alternative = "less")
str(patients[, 7])
wilcox.test(as.numeric(patients[, 7]), as.numeric(temoins[, 7]), alternative = "less")
mtcars[5]
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "less")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "greater")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "two.sides")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "two.sided")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), exact = TRUE, alternative = "less")
likelihood.test(patients %>% pull(7), temoins %>% pull(7))
library(Deducer)
install.packages(Deducer)
install.packages("Deducer")
library(Deducer)
likelihood.test(patients %>% pull(7), temoins %>% pull(7))
sum(patients %>% pull(7))
RP <- sum(patients %>% pull(7))
RT <- sum(temoins %>% pull(7))
likelihood.test(c(RP, 71 - RP), c(RT, 71 - RT))
G.test(matrix(c(RP, 71 - RP, RT, 71 - RT), byrow = TRUE))
library(RVAideMemoire)
install.packages("RVAideMemoire")
library(RVAideMemoire)
G.test(matrix(c(RP, 71 - RP, RT, 71 - RT), byrow = TRUE))
c(RP, 71 - RP, RT, 71 - RT)
wilcox.test(c(RP, 71 - RP, RT, 71 - RT), alternative = "less")
wilcox.test(c(RP, 71 - RP, RT, 71 - RT), alternative = "greater")
likelihood.test(matrix(c(RP, 71 - RP, RT, 71 - RT), byrow = TRUE))
fisher.test(matrix(c(RP, 71 - RP, RT, 71 - RT), byrow = TRUE))
matrix(c(RP, 71 - RP, RT, 71 - RT), byrow = TRUE)
G.test(matrix(c(RP, 71 - RP, RT, 71 - RT), nrow = 2, byrow = TRUE))
fisher.test(matrix(c(RP, 71 - RP, RT, 71 - RT), nrow = 2, byrow = TRUE))
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "less")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "greater")
wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "two.sided")
likelihood.test(c(RP, 71 - RP), c(RT, 71 - RT))
pWM <- wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "less")
str(pWM)
testWM <- lapply(7:32, function(i) {
return(c(i, wilcox.test(patients %>% pull(7), temoins %>% pull(7), alternative = "less")$p.value))
})
testWM
return(c(i, wilcox.test(patients %>% pull(i), temoins %>% pull(i), alternative = "less")$p.value))
testWM <- lapply(7:32, function(i) {
return(c(i, wilcox.test(patients %>% pull(i), temoins %>% pull(i), alternative = "less")$p.value))
})
testWM
as.data.frame(testWM)
?as.data.frame
?sapply
testWM <- sapply(7:32, function(i) {
return(wilcox.test(patients %>% pull(i), temoins %>% pull(i), alternative = "less")$p.value)
}, USE.NAMES = TRUE)
testWM
names(testWM) = 7:32
testWM
testWMSorted <- sort(testWM)
testWMSorted
oldPar <- par(mfrow = c(2, 3))
plot_par_critere_ordered <- lapply(names(testWMSorted), function(i) {
tb <- table(objets[c(2, i)])
barplot(tb, # main=,
xlab=colnames(objets)[i],
col=c("darkblue","red"),
# legend = rownames(counts),
beside=TRUE)
})
plot_par_critere_ordered <- lapply(as.integer(names(testWMSorted)), function(i) {
tb <- table(objets[c(2, i)])
barplot(tb, # main=,
xlab=colnames(objets)[i],
col=c("darkblue","red"),
# legend = rownames(counts),
beside=TRUE)
})
testWMSorted
?select
objetsSymplifiEs <- objets[as.integer(names(testWMSorted))]
objetsSymplifiEs <- objets[as.integer(names(testWMSorted))[1:5]]
acpObjetsSym <- prcomp(formula = ~ .,
data = objetsSymplifiEs, rank. = 3)
#### Affichage en 2D ####
## install.packages("ggfortify")
library(ggfortify)
autoplot(acpObjetsSym, data = objetsSymplifiEs[, c(2, 7:32)], colour = 'patient')
#### Maintenant en 3D ####
## install.packages("plotly")
objetsSymplifiEs <- cbind(objetsSymplifiEs, acpObjetsSym$x)
objetsSymplifiEs <- objets[c(2, as.integer(names(testWMSorted))[1:nbVar])]
objetsSymplifiEs <- objets[c(1:6, as.integer(names(testWMSorted))[1:nbVar])]
nbVar <- 5
objetsSymplifiEs <- objets[c(1:6, as.integer(names(testWMSorted))[1:nbVar])]
acpObjetsSym <- prcomp(formula = ~ . - N. - patient - depression - Sexe - Age - Bac,
data = objetsSymplifiEs, rank. = 3)
library(ggfortify)
autoplot(acpObjetsSym, data = objetsSymplifiEs[, c(2, 7:11)], colour = 'patient')
objetsSymplifiEs <- cbind(objetsSymplifiEs, acpObjetsSym$x)
plot3DSym <- plot_ly(objetsSymplifiEs, x = ~PC1, y = ~PC2, z = ~PC3, color = ~patient, colors = couleurs[c(2,11)],
hoverinfo = 'text', text = ~paste("No. de patient : ", N.))  %>%
add_markers() %>% layout(scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3')))
library("RColorBrewer")
couleurs <- brewer.pal(n = 11, name = 'RdBu')
plot3DSym <- plot_ly(objetsSymplifiEs, x = ~PC1, y = ~PC2, z = ~PC3, color = ~patient, colors = couleurs[c(2,11)],
hoverinfo = 'text', text = ~paste("No. de patient : ", N.))  %>%
add_markers() %>% layout(scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3')))
save(plot3DSym, file = "plot3DSym.RData")
getwd()
setwd("C:/Users/ellie/Documents/R/stageCHR/")
save(plot3DSym, file = "plot3DSym.RData")
cor(objetsSymplifiEs)
cor(objetsSymplifiEs[7:11])
?kmeans
